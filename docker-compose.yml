version: '3.8'

services:
  # MySQL数据库
  db:
    image: mysql:8.0
    container_name: rag_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: rag_db
      MYSQL_USER: rag_user
      MYSQL_PASSWORD: rag_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rag_network

  # ChromaDB向量数据库
  chromadb:
    image: chromadb/chroma:latest
    container_name: rag_chromadb
    restart: unless-stopped
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - rag_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: rag_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rag_network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://rag_user:rag_pass@db:3306/rag_db
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - db
      - chromadb
      - redis
    networks:
      - rag_network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - rag_network

volumes:
  mysql_data:
  chroma_data:
  redis_data:

networks:
  rag_network:
    driver: bridge 